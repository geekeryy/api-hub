// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: user.proto

package memberservice

import (
	"context"

	"github.com/geekeryy/api-hub/rpc/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetAdminInfoReq   = user.GetAdminInfoReq
	GetAdminInfoResp  = user.GetAdminInfoResp
	GetMemberInfoReq  = user.GetMemberInfoReq
	GetMemberInfoResp = user.GetMemberInfoResp

	MemberService interface {
		GetMemberInfo(ctx context.Context, in *GetMemberInfoReq, opts ...grpc.CallOption) (*GetMemberInfoResp, error)
	}

	defaultMemberService struct {
		cli zrpc.Client
	}
)

func NewMemberService(cli zrpc.Client) MemberService {
	return &defaultMemberService{
		cli: cli,
	}
}

func (m *defaultMemberService) GetMemberInfo(ctx context.Context, in *GetMemberInfoReq, opts ...grpc.CallOption) (*GetMemberInfoResp, error) {
	client := user.NewMemberServiceClient(m.cli.Conn())
	return client.GetMemberInfo(ctx, in, opts...)
}
