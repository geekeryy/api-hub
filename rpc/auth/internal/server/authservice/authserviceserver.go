// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: auth.proto

package server

import (
	"context"

	"github.com/geekeryy/api-hub/rpc/auth/auth"
	"github.com/geekeryy/api-hub/rpc/auth/internal/logic/authservice"
	"github.com/geekeryy/api-hub/rpc/auth/internal/svc"
)

type AuthServiceServer struct {
	svcCtx *svc.ServiceContext
	auth.UnimplementedAuthServiceServer
}

func NewAuthServiceServer(svcCtx *svc.ServiceContext) *AuthServiceServer {
	return &AuthServiceServer{
		svcCtx: svcCtx,
	}
}

// C端用户授权
func (s *AuthServiceServer) MemberLogin(ctx context.Context, in *auth.MemberLoginReq) (*auth.MemberLoginResp, error) {
	l := authservicelogic.NewMemberLoginLogic(ctx, s.svcCtx)
	return l.MemberLogin(in)
}

func (s *AuthServiceServer) MemberRegister(ctx context.Context, in *auth.MemberRegisterReq) (*auth.MemberRegisterResp, error) {
	l := authservicelogic.NewMemberRegisterLogic(ctx, s.svcCtx)
	return l.MemberRegister(in)
}

func (s *AuthServiceServer) MemberRefreshToken(ctx context.Context, in *auth.MemberRefreshTokenReq) (*auth.MemberRefreshTokenResp, error) {
	l := authservicelogic.NewMemberRefreshTokenLogic(ctx, s.svcCtx)
	return l.MemberRefreshToken(in)
}

func (s *AuthServiceServer) MemberActivateEmail(ctx context.Context, in *auth.MemberActivateEmailReq) (*auth.Empty, error) {
	l := authservicelogic.NewMemberActivateEmailLogic(ctx, s.svcCtx)
	return l.MemberActivateEmail(in)
}

func (s *AuthServiceServer) MemberForgetPassword(ctx context.Context, in *auth.MemberForgetPasswordReq) (*auth.Empty, error) {
	l := authservicelogic.NewMemberForgetPasswordLogic(ctx, s.svcCtx)
	return l.MemberForgetPassword(in)
}

// B端用户授权
func (s *AuthServiceServer) AdminLogin(ctx context.Context, in *auth.AdminLoginReq) (*auth.AdminLoginResp, error) {
	l := authservicelogic.NewAdminLoginLogic(ctx, s.svcCtx)
	return l.AdminLogin(in)
}

func (s *AuthServiceServer) AdminRegister(ctx context.Context, in *auth.AdminRegisterReq) (*auth.AdminRegisterResp, error) {
	l := authservicelogic.NewAdminRegisterLogic(ctx, s.svcCtx)
	return l.AdminRegister(in)
}

// 公钥服务
func (s *AuthServiceServer) GetJwks(ctx context.Context, in *auth.GetJwksReq) (*auth.GetJwksResp, error) {
	l := authservicelogic.NewGetJwksLogic(ctx, s.svcCtx)
	return l.GetJwks(in)
}
