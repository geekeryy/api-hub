syntax = "proto3";

package auth;

option go_package = "./auth";

service AuthService {
    // C端用户授权
    rpc MemberLogin(MemberLoginReq) returns (MemberLoginResp);
    rpc MemberRegister(MemberRegisterReq) returns (MemberRegisterResp);
    rpc MemberRefreshToken(MemberRefreshTokenReq) returns (MemberRefreshTokenResp);
    rpc MemberActivateEmail(MemberActivateEmailReq) returns (Empty);
    rpc MemberForgetPassword(MemberForgetPasswordReq) returns (Empty);

    // B端用户授权
    rpc AdminLogin(AdminLoginReq) returns (AdminLoginResp);
    rpc AdminRegister(AdminRegisterReq) returns (AdminRegisterResp);

    // 公钥服务
    rpc GetJwks(GetJwksReq) returns (GetJwksResp);
}

message Empty{}

message MemberLoginReq {
    int64 identity_type =1;
    string identifier =2;
    string credential =3;
}

message MemberLoginResp {
    string token = 1;
    string refresh_token = 2;
}

message MemberRegisterReq {
    int64 identity_type =1;
    string identifier =2;
    string credential =3;
    string code =4;
}

message MemberRegisterResp {
    string token = 1;
    string refresh_token = 2;
}

message MemberRefreshTokenReq {
    string refresh_token = 1;
    string member_uuid = 2;
}

message MemberRefreshTokenResp {
    string token = 1;
}

message MemberActivateEmailReq {
    string member_uuid = 1; // 用户UUID
    string email = 2; // 邮箱
}


message MemberForgetPasswordReq {
    int64 identity_type =1;
    string identifier =2;
    string code =3;
    string password =4;
}


message AdminLoginReq {
    int64 identity_type = 1;
    string identifier = 2;
    string credential = 3;
}

message AdminLoginResp {
    string token = 1;
    string refresh_token = 2;
}

message AdminRegisterReq {
    int64 identity_type = 1;
    string identifier = 2;
    string credential = 3;
}

message AdminRegisterResp {
    string token = 1;
    string refresh_token = 2;
}



message GetJwksReq {
    string service = 1;
}

message GetJwksResp {
    string data = 1;
}