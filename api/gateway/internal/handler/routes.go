// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2

package handler

import (
	"net/http"

	ai "github.com/geekeryy/api-hub/api/gateway/internal/handler/ai"
	authadmin "github.com/geekeryy/api-hub/api/gateway/internal/handler/auth/admin"
	authjwks "github.com/geekeryy/api-hub/api/gateway/internal/handler/auth/jwks"
	authmember "github.com/geekeryy/api-hub/api/gateway/internal/handler/auth/member"
	authoms "github.com/geekeryy/api-hub/api/gateway/internal/handler/auth/oms"
	healthz "github.com/geekeryy/api-hub/api/gateway/internal/handler/healthz"
	useradmin "github.com/geekeryy/api-hub/api/gateway/internal/handler/user/admin"
	usermember "github.com/geekeryy/api-hub/api/gateway/internal/handler/user/member"
	"github.com/geekeryy/api-hub/api/gateway/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtMiddleware, serverCtx.ContextMiddleware},
			[]rest.Route{
				{
					// 每日一句
					Method:  http.MethodGet,
					Path:    "/daily-sentence",
					Handler: ai.DailySentenceHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/gateway/ai"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ContextMiddleware},
			[]rest.Route{
				{
					// 登录
					Method:  http.MethodPost,
					Path:    "/login",
					Handler: authadmin.AdminLoginHandler(serverCtx),
				},
				{
					// 注册
					Method:  http.MethodPost,
					Path:    "/register",
					Handler: authadmin.AdminRegisterHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/gateway/auth/admin"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 获取公钥
				Method:  http.MethodGet,
				Path:    "/get",
				Handler: authjwks.JWKSHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/gateway/auth/jwks"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ContextMiddleware},
			[]rest.Route{
				{
					// 激活邮箱
					Method:  http.MethodPost,
					Path:    "/activate-email",
					Handler: authmember.MemberActivateEmailHandler(serverCtx),
				},
				{
					// 忘记密码
					Method:  http.MethodPost,
					Path:    "/forget-password",
					Handler: authmember.MemberForgetPasswordHandler(serverCtx),
				},
				{
					// 登录
					Method:  http.MethodPost,
					Path:    "/login",
					Handler: authmember.MemberLoginHandler(serverCtx),
				},
				{
					// 刷新Token
					Method:  http.MethodPost,
					Path:    "/refresh",
					Handler: authmember.MemberRefreshTokenHandler(serverCtx),
				},
				{
					// 注册
					Method:  http.MethodPost,
					Path:    "/register",
					Handler: authmember.MemberRegisterHandler(serverCtx),
				},
				{
					// 发送邮箱验证码
					Method:  http.MethodPost,
					Path:    "/send-email-code",
					Handler: authmember.MemberSendEmailCodeHandler(serverCtx),
				},
				{
					// 发送手机验证码
					Method:  http.MethodPost,
					Path:    "/send-phone-code",
					Handler: authmember.MemberSendPhoneCodeHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/gateway/auth/member"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// Oms登录
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: authoms.OmsLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/gateway/auth/oms"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 健康检查
				Method:  http.MethodGet,
				Path:    "/ping",
				Handler: healthz.PingHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/gateway"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ContextMiddleware, serverCtx.AdminJwtMiddleware},
			[]rest.Route{
				{
					// 获取用户信息
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: useradmin.AdminInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/gateway/user/admin"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ContextMiddleware, serverCtx.JwtMiddleware},
			[]rest.Route{
				{
					// 绑定邮箱
					Method:  http.MethodPost,
					Path:    "/bind-email",
					Handler: usermember.MemberBindEmailHandler(serverCtx),
				},
				{
					// 绑定手机号
					Method:  http.MethodPost,
					Path:    "/bind-phone",
					Handler: usermember.MemberBindPhoneHandler(serverCtx),
				},
				{
					// 修改密码
					Method:  http.MethodPut,
					Path:    "/change-password",
					Handler: usermember.MemberChangePasswordHandler(serverCtx),
				},
				{
					// 获取用户信息
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: usermember.MemberInfoHandler(serverCtx),
				},
				{
					// 解绑邮箱
					Method:  http.MethodPost,
					Path:    "/unbind-email",
					Handler: usermember.MemberUnbindEmailHandler(serverCtx),
				},
				{
					// 解绑手机号
					Method:  http.MethodPost,
					Path:    "/unbind-phone",
					Handler: usermember.MemberUnbindPhoneHandler(serverCtx),
				},
				{
					// 更新用户信息
					Method:  http.MethodPut,
					Path:    "/update-info",
					Handler: usermember.MemberUpdateInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/gateway/user/member"),
	)
}
