// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2

package handler

import (
	"net/http"

	healthz "github.com/geekeryy/api-hub/api/oms/internal/handler/healthz"
	jwks "github.com/geekeryy/api-hub/api/oms/internal/handler/jwks"
	"github.com/geekeryy/api-hub/api/oms/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 健康检查
				Method:  http.MethodGet,
				Path:    "/ping",
				Handler: healthz.PingHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/oms"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ContextMiddleware, serverCtx.OmsJwtMiddleware},
			[]rest.Route{
				{
					// 删除公钥
					Method:  http.MethodDelete,
					Path:    "/delete",
					Handler: jwks.DeleteKeyHandler(serverCtx),
				},
				{
					// 轮换公钥
					Method:  http.MethodPut,
					Path:    "/rotate",
					Handler: jwks.RotateKeyHandler(serverCtx),
				},
				{
					// 公钥使用记录
					Method:  http.MethodGet,
					Path:    "/usage",
					Handler: jwks.KeyUsageHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/oms/jwks"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ContextMiddleware, serverCtx.OmsJwtMiddleware},
			[]rest.Route{}...,
		),
		rest.WithPrefix("/api/v1/oms/rbac"),
	)
}
